module.exports = {
  message: {
    NavTab: {
      Trading: "Trade",
      BPoS: "BPoS",
      Mobility: "Liquidity",
      Staking: "NFT Staking",
    },
    Loading: "Loading",
    Trading: {
      Exchange: "BPoS",
      Mobility: "Liquidity",
      Nft: "NFT",
      Hash: "Hash Bump",
      Lucky: "LuckyStar",
      Send: "Send",
      Balance: "Balance",
      OutNums: "Send",
      InNums: "Receive",
      ExchangeBtn: "Confirm Swap",
      ruleNull: "Input is empty",
      BindInviter: "Invitation address",
      Receive: "Receive (estimated)",
      Value: "Balance",
      Gasfee: "Trading Fees",
      RecentRecord: "Last record",
      MoveRecord: "More records",
      Buy: "Buy",
      SellOut: "Sell Out",
      Dev: "come soon",
      ExchangeSuc: "Successful exchange",
      RemoveSuc: "Removal successful",
    },
    NFTexchange: {
      NftNo: "No NFT",
      Staking: "Staking",
      Redemption: "Redeem",
      Out: "Staking Quantity",
      In: "Credit Quantity",
      Confirm: "Confirm Staking",
      InpNft: "Select NFT",
      Name: "NFT Collection",
      Mynums: "My NFTs",
      StakeTotal: "(Staked/Total)",
      Credit: "Credit Limit",
      StakeSuc: "Staking Success",
      RedeemedSuc: "Redeemed Success",
    },
    ExchangeRecord: {
      Record: "Exchange Record",
      MobilityRecord: "Liquidity Record",
      Eschange: "Exchange",
      Redemption: "Redeem",
      SoldPrice: "Unit price",
      SoldNumber: "Quantity",
      SoldAmount: "Amount",
      HandlingFee: "Trading Fees",
      Direction: "Direction",
      Final: "Final Received",
      NoRedemption: "Not redeemable",
    },
    Components: {
      ChooseHold: "Select position",
      Filter: "Filter",
      Date: "Date",
      Day: "1 day",
      Week: "7 days",
      Month: "1 month",
      MonthThree: "3 months",
      Reset: "Reset",
      Confirm: "Confirm",
      Cancel: "Cancel",
      Completion: "Completion",
      ChooseNft: "Select NFT",
    },
    BPoS: {
      Hold: "Position",
      Node: "Node",
      Dividend: "Dividend",
      StarLink: "StarLink",
      HoldTotal: "Total Value of Positions",
      NodeTotalRevenue: "Total Nodes Profit",
      DividendTotalRevenue: "Total earnings from dividends",
      StarTotalRevenue: "Starlink Total Profit",
      TotalPosition: "Total Position",
      NodeTotalPosition: "Total Nodes Quantity",
      DividendTotalAmount: "Dividend Amount",
      PositionValue: "Max Amount",
      NoAndYes: "Unclaimed/Claimed",
      NoAndYesTotal: "Unclaimed/Claime",
      NodeTotalMoney: "Total Nodes Value",
      TodayDividend: "Today's Dividend",
      CurrentPosition: "Current Amount",
      Create: "Add Position",
      AllHolds: "All positions",
      NowHolds: "Current Position",
      Moved: "Sold Position",
      Transactions: "Swapped",
      Turnover: "Amount",
      Received: "Claimed",
      Revenue: "Profit Ratio",
      Earnings: "Earnings",
      WalletAddr: "Wallet Address",
      DividendRecord: "Dividend Record",
      WeightedDividend: "Weighted Dividend",
      StarlinkRecord: "Starlink Records",
      Add: "Position Add",
      Addjin: "Position Net Add",
      Reduction: "Less",
      All: "All",
    },
    LpBPoS: {
      Fene: "Share",
      HoldTotal: "Total value of shares",
      NoGetTotal: "Unclaimed",
      YesGetTotal: "Claimed",
      FeneTotal: "Total shares",
      NodeTotalMoney: "Total value of node share",
      NodeTotalPosition: "Total Node",
      PositionValue: "Max Amounth",
      CurrentPosition: "Current Amount",
      AllHolds: "All shares",
      NowHolds: "Current share",
      Moved: "Share Moved",
      Revenue: "Revenue streams",
      Num: "Amount",
      Create: "Creating Mobility",
      Add: "Add",
    },
    AllRecord: {
      Water: "Profit Ratio",
      DividendRecord: "Dividend Record",
      StarRecord: "Starlink Records",
    },
    GetRecord: {
      Record: "Claimed Records",
      Success: "Success",
    },
    Staking: {
      EsgTotal: "Total（ESG）",
      Geted: "Claimed",
      WaitNums: "Pending",
      NoGetNums: "Unclaimed",
      Get: "Claim",
      Released: "Pending release",
      GetNums: "Already Claimed",
      NftExchangeRecord: "Release records",
      Nums: "Number",
      ExchangeNum: "Exchange",
      getExchangeNum: "Claimed",
      Release: "Release",
      Earnings: "Receivables",
      NoMoney: "No gain",
      Received: "Collection successful",
    },
    ShareDetails: {
      ShifDetails: "Release details",
      FeneDetails: "Position Details",
      FenePrice: "Value of positions held",
      Daishifan: "To be released",
      FenNums: "Position Quantity",
      NoAndYes: "Unclaimed / Claimed",
      Received: "Received",
      NoReceived: "Unclaimed",
      Revenue: "Earnings",
      RevenueRatio: "Profit Ratio",
      Status: 'State',
      StatusDetails: "Unlocked",
      StatusDetailsNo: "Locked",
    },
    LpDetails: {
      FeneDetails: "Share Details",
      FenePrice: "Share value",
      FenNums: "Number",
    },
    Toast: {
      NoData: "No data available",
      link: "Please link wallet",
      netWorkErr: "Network error",
      nullNFT: "No such card available at this time",
      nullAttr: "No card for this property",
      numsNone: "Insufficient quantity",
      NoUpgrade: "Attribute bonus has reached 10%",
      UseSuccess: "Use successfully",
      NoneMetamask: "Install MetaMask",
      networkRejection: "Rejected",
      networkRepeat: "Link requests have not been confirmed",
      TradingFail: "Come soon", // Transaction failure
      TradingTimeOut: "Transaction Timeout",
      ContractUpgrade: "Contract upgrade in progress",
      ExchangeSuc: "Successful transaction",
      ApprovalFail: "Authorisation failure",
      ApprovalSuccess: "Authorisation successful",
    },
    Main: {
      Commonsoon: "Please look forward to",
      Connect: "Connect",
      Home: "Home",
      BlindBox: "Blind Box",
      Nuclear: "Nuclear/Entropy",
      MaskBaby: "Mask Baby",
      Team: "Team",
      LuckyNumber: "Lucky Number",
      Announcement: "Announcement",
      Spaceship: "HELIUM-3 Spaceship",
      EsgExchange: "BPoS",
      Map: "Exchange",
      Invite: "Invite Friends",
      Dividend: "LP",
      CopySuccess: "Copy Success",
      NoWhite: "Not a whitelist",
      Gamefi: "GameFi",
      Set: "Settings",
      LangChange: "Select Language",
      Mode: "Dark Mode",
    },
    Home: {
      ApprovalFail: "Unauthorized",
      ApprovalSuccess: "Successful authorization",
    },
    BlindBox: {
      InviterPlc: "Please enter the Bind Invitation Address", //
      Confirm: "Confirm", //
      ruleAddr: "Please enter the correct ethereum address", //
      ruleBalanceNot: "Insufficient balance", //
    },
    EsgExchange: {
      GetSuc: "Received successfully",
      PositioningNo: "No position",
      RewardAmounNo: "No revenue",
      NoPermission: "No permission",
      isReferrerAddr: "No address for this invitee",
      ChooseNull: "Select empty",
    },
    Mobility: {
      Toggle: "Toggle",
      Remove: "Remove",
      Add: "Add",
      Nums: "Amount",
      HandlingFee: "Trading fee",
      AddMobility: "Adding liquidity",
      RemogeMobility: "Remove liquidity",
      Fene: "Share",
      AddSuc: "Added successfully",
      RemoveSuc: "Removal successful",
    },
    LuckyPool: {
      Luckypool: "Lucky Pool",
      Porwerpool: "Energy Pool",
      q_luck1:
        "1. A 0.8% trading fee applies to each buy order put in the Lucky pool. ",
      q_luck2:
        "2. When the Lucky Pool reaches a total of 2,000 ESG,3,000 ESG,4,000 ESG,and 5,000 ESG, the prizes will be awarded based on 50%, 60%, 70%, and 80% of the total pool quantity.",
      q_luck3:
        "3. The last address for a valid buy order that contributes trading fees sufficient to cause the amount of ESG in the Lucky Pool to fulfil the conditions enabling the awarding of prizes wins first prize and 20% of the overall prize pool.",
      q_luck4:
        "4. The second-to-last to the eleventh-to-last buy order addresses win second prize,30% of the bonus will be divided equally.",
      q_luck5:
        "5. The twelfth-to-last to the thirty-first-to-last buy order addresses win third prize, 50% of the bonus will be divided equally.",
      q_luck6:
        "6. After the prizes are awarded from the Lucky Pool, the remaining quantity stays in the Lucky Pool, beginning a new round of prize accumulation.",
      q_power1:
        "1. A 1.2% trading fee applies to each buy order put in the Energy Pool.",
      q_power2:
        "2. The prizes are awarded when the Energy Pool’s cumulative ESG amount reaches 200 ESG.",
      q_power3:
        "3. The final address for a valid buy order that contributes a trading fee sufficient to cause the quantity of ESG in the Energy Pool to fulfil the conditions enabling the awarding of prizes wins first prize and 20% of the overall prize pool.",
      q_power4:
        "4. The second-to-last to the sixth-to-last buy order addresses win second prize, 30% of the bonus will be divided equally.",
      q_power5:
        "5. The seventh-to-last to the sixteenth-to-last buy order addresses win third prize, 50% of the bonus will be divided equally.",
      q_power6:
        "6. After the prizes are awarded from the Energy Pool, beginning a new round of prize accumulation.",
      q_buy1:
        "1. Only those buy orders ≥10 USDT have an opportunity to win a prize.",
      q_buy2:
        "2. A 2% trading fee applies to each buy order put in the prize pool.",
      q_buy3:
        "3. Those who have valid buy orders  through pages of BPoS, Liquidity, and LuckyStar (≥10 USDT) have an opportunity to win a prize.",
      QuestionBuy: "Buy Exchange",
      QuestionTimer: "Countdown",
      q_timer1:
        "1. The total countdown lasts for 3 hours, and the prizes are awarded when this countdown ends.",
      q_timer2:
        "2. For each new valid buy order, the amount of USDT is divided by 10 USDT and multiplied by 30 minutes to extend the countdown time up to a maximum of 3 hours.",
      q_timer3:
        "3. When the countdown clock turns to 00:00:00, the final valid buy order address win first prize and gets 50% of the overall prize pool.prize and gets 20% of the overall prize pool.prize and gets 10% of the overall prize pool.",
      q_timer4:
        "4. A new 3-hour countdown is reopened after the draw and the number of lucky pools continues to accumulate.",
      CountDown: "Countdown",
      BuyReocrd: "Buy Records",
      OpenReocrd: "Winning Records",
      MyReocrd: "My Records",
      Per: "Round ",
      Period: "#",
      Awards: "Awards",
      Address: "Address",
      Bonus: "Bonus",
      Awards1: "First Prize",
      Awards2: "Second Prize",
      Awards3: "Third Prize",
      Time: "Time",
      Amount: "Quantity",
    },
    HashBump: {
      GameDetail: "game introduction",
      Gamehtml: `1. Game Highlights: <br>
        &nbsp;&nbsp;a. Fair & Just: The block hash value is used as the reward basis, which is open, transparent and completely random;<br>
        &nbsp;&nbsp;b. Principal-guaranteed Wealth Management: 1% of USDT will be distributed daily according to the market value of ESG positions, up to 100% of the principal;
        &nbsp;&nbsp;c. High Winning Rate: 50% winning rate if the hash value mantissa is even or odd;<br>
        &nbsp;&nbsp;d. High Yield: The principal USDT will be refunded if you get mantissa of even numbers, which is equivalent to obtaining an equivalent ESG dividend position at zero cost, with a total yield of 200%. There is also a 100% profit on non-winners;<br>
        &nbsp;&nbsp;e. Fun & Exciting: 3-6 seconds to get the result, that is, buy and open immediately, and instantly give out prizes.<br>
        2. 5% trading fee for each buy order, zero trading fee for selling.<br>
        3. ESG purchased on the "Hash Bump" page will be automatically locked up to receive dividends and enjoy capital-guaranteed wealth management income.<br>
        4. The locked ESG will be divided into USDT at 1% of the market value of the position at 8:00 every  morning until it is equal to 100% of the principal at the time of purchase; then the ESG will be unlocked, and users can sell freely after manually claiming it.<br>
        5. Identify the block hash value of the next block height after the user's buy order is completed. When the last number is an even number, 95% of the principal USDT will be directly returned to the user, while the user's lock-up ESG will be retained ; For odd numbers, the principal will not be returned, only the locked ESG.<br>
        6. Retain the original U-shaped resonance network recommendation reward mechanism and invitation relationship chain data of BPoS.<br>
        7. For example, assuming 1 ESG = 1 USDT<br>
        &nbsp;&nbsp;a. User A buys 1000 USDT of ESG, the current block height of the buy order is 22440008, the next block height is 22440009, and the last number of the block hash value of block height 22440009 is odd, then user A holds 950 ESG locked positions, and receives a dividend of 1% of the market value of the 950 locked ESG positions every day until it is equal to the principal of 1,000 USDT, and then releases the locked 950 ESG positions. User A can sell freely;<br>
        &nbsp;&nbsp;b. User B buys 1000 USDT of ESG, the current block height of the buy order is 22440011, the next block height is 22440012, and the last number of the block hash value of block height 22440012 is an even number, then user B Winning the Bump Candy will return the principal of 950 USDT. At the same time, user B holds 950 ESG locked positions, and will also receive 1% of the locked market value every day until it is equal to the principal of 1000 USDT, and then release the lock User B can freely sell 950 ESGs.<br>
        8. Note: Since only the hash values ​​of the latest 256 blocks can be obtained in the smart contract, and the interval between each block is 3 seconds, the user must receive the bonus within 12 minutes after winning the lottery, otherwise the data in the smart contract will overdue after expiration. If it is overwritten, you will no longer be able to claim the prize.`,
      Uptext: "Click to collapse",
      MyBuy: 'My Orders',
      MyHold: 'My Position',
      MyTeam: 'My Team',
      MyNode: 'My Node',
      Time: 'Timestamp',
      BuyIn: 'Bought Amount',
      Hax: 'Txn Hash',
      BuyHeight: 'Current Block Height',
      BlockHeight: 'Next Block Height',
      Mantissa: 'Bump Hash Mantissa',
      Candy: 'Bump Candy',
      Operate: 'Operate',
      Claim: "Claim",
      Claimed: "Claimed",
      Overdue: "Overdue",
      NoCandy: "No Candy",
      Lockout: 'Locked',
      QuestionOperate: 'Hint',
      QuestionOperateText: 'Note: Since only the last 256 blocks of hashes can be fetched in the smart contract and each block is 3 seconds apart, users must claim the candy within 12 minutes after winning, otherwise the data in the smart contract will be overwritten after the expiry date and no more candy (USDT) will be available.',
      NoWhite: 'Not whitelist, No permission.',
      IsWhite: 'No permission',
      FlowingWater: 'Flowing Water',
      TeamTotalMoney: "Total Team Value",
      TeamTotalPosition: 'Total Position',
      TeamTotalRevenue: '"Total Team Profit',
    },
  },
};
